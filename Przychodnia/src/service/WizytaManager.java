package service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import main.*;

public class WizytaManager {
	private Connection connection;
	private String url =  "jdbc:hsqldb:hsql://localhost/";
	private String createTableWizyta = "CREATE TABLE Wizyta(id_Wizyta int GENERATED BY DEFAULT AS IDENTITY, id_Pacjent int, id_Lekarz int)"; 
	
	
	private PreparedStatement dodajWizyta;
	private PreparedStatement usunWizyta;
	private PreparedStatement usunWizyty;
	private PreparedStatement pobierzWizyte;
	private PreparedStatement edytujWizyte;
	
	private Statement statement;
	
	public WizytaManager(){
		try{
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();
			
			ResultSet wyn =	connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while(wyn.next()){
				if("Wizyta".equalsIgnoreCase(wyn.getString("TABLE_NAME"))){
					tableExists = true;
					break;
				}
			}
			
			if(!tableExists)
				statement.executeUpdate(createTableWizyta);
			
			dodajWizyta = connection.prepareStatement("INSERT INTO Wizyta(id_Pacjent, id_Lekarz) VALUES (?, ?)");
			usunWizyta = connection.prepareStatement("DELETE FROM Wizyta WHERE id_Wizyta = ?");
			usunWizyty = connection.prepareStatement("DELETE FROM Wizyta");
			pobierzWizyte = connection.prepareStatement("SELECT id_Pacjent, id_Lekarz FROM Wizyta");
			edytujWizyte = connection.prepareStatement("UPDATE Wizyta SET id_Lekarz = ? WHERE id_Pacjent = ?");
			
				
			
	}
		catch(SQLException e)
		{
		e.printStackTrace();
	}
}

public Connection getConnection()
{
	return connection;
}
	public void wyczyscSprzedazeLekarzu(){
	try{
		usunWizyty.executeUpdate();
		}catch (SQLException e){ 
			e.printStackTrace();
		}
}

	public int dodajWizyta(Pacjent pac, Lekarz lek){
		int count = 0;
		try{
			dodajWizyta.setInt(1, pac.wezid_Pacjent());
			dodajWizyta.setInt(2, lek.wezid_Lekarz());

			
			
			
			count = dodajWizyta.executeUpdate();
			
			
		}catch (SQLException e){
			e.printStackTrace();
		}
		return count;
	}
	
	public int edytujWizyte(Pacjent pac, Lekarz lek){
		int count = 0;
		try{
		
			
			edytujWizyte.setInt(1, lek.wezid_Lekarz());
		
			edytujWizyte.setInt(3, pac.wezid_Pacjent());
			
			
			count = edytujWizyte.executeUpdate();
			
			
		}catch (SQLException e){
			e.printStackTrace();
		}
		return count;
	}
	public int usunWizyta(Wizyta Wizyta)
	{
		int count = 0;
		try
		{
			usunWizyta.setInt(1, Wizyta.getId_Wizyta());

			
			
			
			count = usunWizyta.executeUpdate();
			
			
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		return count;
	}
	
	
	public List<Wizyta> Wizyta()
	{
		List<Wizyta> sprzedazeLekarzu = new ArrayList<Wizyta>();
		
		try
		{
			ResultSet wyn = pobierzWizyte.executeQuery();
			
			while (wyn.next())
			{
				Wizyta s = new Wizyta();
				s.setId_Pacjent(wyn.getInt("id_Pacjent"));
				s.setId_Lekarz(wyn.getInt("id_Lekarz"));
			
				
				sprzedazeLekarzu.add(s);
			}}catch(SQLException e) {
				e.printStackTrace();
			}
			return sprzedazeLekarzu;
		}
	}