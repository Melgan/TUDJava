package service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import main.Pacjent;

public class PacjentManager 
{
	private Connection connection;
	private String url= "jdbc:hsqldb:hsql://localhost/";
	private String createTablePacjent="CREATE TABLE Pacjent(id_Pacjent int GENERATED BY DEFAULT AS IDENTITY, imie varchar(20), nazwisko varchar(20), pesel int)"; 
	
	
	private PreparedStatement dodajPacjenta;
	private PreparedStatement usunPacjenta;
	private PreparedStatement usunPacjenty;
	private PreparedStatement wezPacjenty;
	private PreparedStatement zmienPacjenta;
	
	private Statement statement;
	public PacjentManager()
	{
		try
		{
			connection=DriverManager.getConnection(url);
			statement=connection.createStatement();
			
			ResultSet wyn =	connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists=false;
			while(wyn.next())
			{
				if("Pacjent".equalsIgnoreCase(wyn.getString("TABLE_NAME")))
				{
					tableExists=true;
					break;
				}
			}
			
			if(!tableExists)
				statement.executeUpdate(createTablePacjent);
			
			dodajPacjenta=connection.prepareStatement("INSERT INTO Pacjent(imie, nazwisko, pesel) VALUES (?, ?, ?)");
			usunPacjenta=connection.prepareStatement("DELETE FROM Pacjent WHERE id_Pacjent=?");
			usunPacjenty=connection.prepareStatement("DELETE FROM Pacjent");
			wezPacjenty=connection.prepareStatement("SELECT id_Pacjent, imie, nazwisko, pesel FROM Pacjent");
			zmienPacjenta=connection.prepareStatement("UPDATE Pacjent set imie=?, nazwisko=?, pesel=? WHERE id_Pacjent=?");
			
				
			
	}
		catch(SQLException e)
		{
			e.printStackTrace();
		}
}

public Connection wezConnection()
{
	return connection;
}
	public void wyczyscPacjentow()
	{
	try
		{
			usunPacjenty.executeUpdate();
		}
		catch (SQLException e)
		{ 
			e.printStackTrace();
		}
}

	public int dodajPacjenta(Pacjent Pacjent)
		{
			int licznik=0;
			try
			{
			dodajPacjenta.setString(1, Pacjent.wezImie());
			dodajPacjenta.setString(2, Pacjent.wezNazwisko());
			dodajPacjenta.setInt(3, Pacjent.wezpesel());
			
			
			
			licznik=dodajPacjenta.executeUpdate();
			
			
		}catch (SQLException e)
			{
			e.printStackTrace();
		}
		return licznik;
	}
	
	public int zmienPacjenta(Pacjent Pacjent)
	{
		int licznik=0;
		try
		{
			zmienPacjenta.setString(1, Pacjent.wezImie());
			zmienPacjenta.setString(2, Pacjent.wezNazwisko());
			zmienPacjenta.setInt(3, Pacjent.wezpesel());
			zmienPacjenta.setInt(4, Pacjent.wezid_Pacjent());
			
			
			licznik=zmienPacjenta.executeUpdate();
			
			
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		return licznik;
	}
	public int usunPacjenta(Pacjent Pacjent)
	{
		int licznik=0;
		try
		{
			usunPacjenta.setInt(1, Pacjent.wezid_Pacjent());
			licznik=usunPacjenta.executeUpdate();
			
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		return licznik;
	}
	
	public List<Pacjent> wezPacjenty()
	{
		List<Pacjent> klienci=new ArrayList<Pacjent>();
		
		try
		{
			ResultSet wyn=wezPacjenty.executeQuery();
			
			while (wyn.next())
			{
				Pacjent k=new Pacjent();
				k.ustawid_Pacjent(wyn.getInt("id_Pacjent"));
				k.ustawImie(wyn.getString("imie"));
				k.ustawNazwisko(wyn.getString("nazwisko"));
				k.ustawpesel(wyn.getInt("pesel"));
				klienci.add(k);
			}}
		catch(SQLException e) 
		{
				e.printStackTrace();
			}
			return klienci;
		}
	}